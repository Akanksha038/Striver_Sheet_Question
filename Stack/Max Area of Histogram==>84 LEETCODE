/******************************************************************************

Max Area of Histogram==>84 LEETCODE

*******************************************************************************/
#include <iostream>
#include<stack>
#include<vector>
#include <climits>

using namespace std;
vector<int>nextSmaller(vector<int>&input){
    stack<int>s;
    int size=input.size();
    s.push(-1);
    vector<int>ans(size);
    for(int i=size-1;i>=0;i--){
        int curr=input[i];
        while(s.top()!=-1 && input[s.top()]>=curr){
            s.pop();
            
        }
        
        ans[i]=s.top();
        s.push(i);
    }
    return ans;
}


vector<int>previousSmallerElement(vector<int>&input){
    stack<int>s;
    
    int size=input.size();
    s.push(-1);
    vector<int>ans(size);
    
    for(int i=0;i<input.size();i++)
    {
        int curr=input[i];
        while(s.top()!=-1 && input[s.top()]>=curr){
            s.pop();
            
        }
        
        ans[i]=s.top();
        s.push(i);
    }
    return ans;
}

int getRectangularAreaHistogram(vector<int>&height){
    vector<int>prev=previousSmallerElement(height);
    vector<int>next= nextSmaller(height);
    int maxArea=INT_MIN;
    int size=height.size();
    
    for(int i=0;i<height.size();i++)
    {
        int length=height[i];
        int width=next[i]-prev[i]-1;
        int area=length* width;
        maxArea=max(maxArea,area);
    }
    return maxArea;
}

int main()
{
    
    
    
    vector<int>v;
    v.push_back(2);
    
     v.push_back(1);
     
      v.push_back(5);
      
       v.push_back(6);
       
        v.push_back(2);
        
         v.push_back(3);
    cout<<"Ans is: "<<getRectangularAreaHistogram(v)<<endl;;

    return 0;
}

// output

// Ans is: 10


