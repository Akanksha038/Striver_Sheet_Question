/******************************************************************************

Doubly Linked List


*******************************************************************************/

#include <iostream>
using namespace std;
 class Node
 {
     
     public:
    int data;
    Node*prev;
    Node*next;
    
    Node(int data){
        this->data=data;
        this->prev=NULL;
        this->next=NULL;
    }
    
 };
 
 void print(Node*&head){
     Node*temp=head;
     while(temp!=NULL){
         cout<<temp->data<<" "<<endl;
         temp=temp->next;
     }
 }
 
 int getLength(Node*&head)
 {
     int len=0;
     Node*temp=head;
     while(temp!=NULL)
     {
         len++;
         temp=temp->next;
     }
     return len;
 }
 
 int main(){
     Node*head=new Node(10);
         Node*second=new Node(20);
             Node*third=new Node(30);
                 Node*fourth=new Node(40);
                     Node*fifth=new Node(50);
                     
    //connect Node
    head->next=second;
    second->next=third;
    second->prev=head;
    
    third->next=fourth;
    third->prev=second;
    
    fourth->next=fifth;
    fourth->prev=third;
    
    
    print(head);
    cout<< "\nlength:"<<getLength(head);
    
     return 0;
     
 }
 output:


 10 
20 
30 
40 
50 

length5
